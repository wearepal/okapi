[tool.black]
line-length = 100
target-version = ['py37']

[tool.isort]
known_third_party = [
  "black",
  "click",
  "click_option_group",
  "hydra",
  "matplotlib",
  "mypy",
  "numpy",
  "omegaconf",
  "pandas",
  "pylint",
  "pytest",
  "scipy",
  "setuptools",
  "sklearn",
  "torch",
  "tqdm",
  "wandb",
]
known_future_library = []
extra_standard_library = ["dataclasses", "__future__"]
line_length = 88
profile = "black"
force_sort_within_sections = "True"
classes = ["MISSING"]

[tool.poetry]
name = "okapi"
version = "0.0.1"
description = ""
authors = ["Myles Bartlett", "Sara Romiti"]
license = "Apache License 2.0"
packages = [
  { include = "src" },
  { include = "hydra_plugins" },
]
classifiers=[
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
keywords=["typing", "python"]
repository=""
readme="README.md"

[tool.poetry.dependencies]
attrs = "^21.4.0"
classy-vision = "^0.6.0"
clip = { git = "https://github.com/openai/CLIP.git", branch = "main" }
deepspeed = { version = "^0.5.10", platform = "linux", optional = true }
fairscale = "^0.4.5"
faiss-cpu = "^1.7.0"
ftfy = "^6.1.1"
hydra-submitit-launcher = "^1.1.6"
neoconfigen = ">=2.3.3"
python = ">=3.9.11,<3.11"
ranzen = { version = ">=2.0.3" }
regex = "^2022.1.18"
scikit-learn = "^0.24.1"
seaborn = "^0.11.2"
setuptools = "59.5.0" # for pytorch-lightning
timm = "^0.5.4"
torch = "^1.10.2"
torch-conduit = { git = "https://github.com/wearepal/conduit.git", branch = "main" }
torchmetrics = "^0.7.2"
transformers = "^4.20.1"
triton = { version = "1.0.0", platform = "linux",  optional = true }
typing-extensions = ">=4.0"
wandb = "^0.12.10"
wilds = "^2.0.0"
wrapt = "<1.14,>=1.11"

[tool.poetry.extras]
deepspeed = ["deepspeed", "triton"]

[tool.poetry.dev-dependencies]
black = "^22.1"
pytest = "^6.2.2"
isort = "^5.7.0"
darglint = "^1.8.0"

[tool.pyright]
exclude = ["**/node_modules", "**/__pycache__", "**/.**"]
typeCheckingMode = "basic"
pythonVersion = "3.10"
reportUnusedImport = "error"
reportDuplicateImport  = "error"
reportIncompatibleVariableOverride = "error"
reportOverlappingOverload = "error"
reportUntypedNamedTuple = "error"
reportConstantRedefinition = "warning"
reportMissingImports = "error"
reportMissingTypeStubs = "warning"
strictListInference = true
strictSetInference = true
strictParameterNoneValue = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
